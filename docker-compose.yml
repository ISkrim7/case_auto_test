version: '3.8'services:  case_auto_test:    #build: .    build:      context: .      # 强制重建缓存层（首次构建后移除）      args:        - BUILDKIT_INLINE_CACHE=1    image: auto-test-hub:2.0  # 使用构建的镜像    #container_name: case_auto_hub_test    ports:      - "5050:5050"    environment:      - TZ=Asia/Shanghai      - PLAYWRIGHT_BROWSERS_PATH=/home/appuser/.cache/ms-playwright      - ENV=dev      - LOCUST_SKIP_MONKEY_PATCH=True      - MYSQL_SERVER=192.168.17.6      - MYSQL_PASSWORD=chongde123.      - MYSQL_PORT=8026      - MYSQL_DATABASE=autohub      - REDIS_SERVER=192.168.17.6      - REDIS_PASSWORD=Chongde2023..      - REDIS_PORT=6379      - APS=True    # CPU 和内存限制    deploy:      resources:        limits:          cpus: "2.0"    # 最大使用2个CPU核心          memory: 1G # 增加到1GB内存 ⚠️        reservations:          memory: 256M   # 保证至少256MB内存    # 日志配置    logging:      driver: "json-file"  # 使用JSON格式日志      options:        max-size: "5m"    # 单个日志文件最大10MB        max-file: "10"      # 保留最近5个日志文件    volumes:      - ./logs:/app/logs      - ./resource:/app/resource      - ./screenshots:/app/screenshots  # 挂载截图目录    # 添加健康检查#    healthcheck:#      test: [ "CMD", "curl", "-f", "http://localhost:5050/health" ]#      interval: 300s#      timeout: 10s#      retries: 3#      start_period: 10s  web:    # 使用已加载的镜像    image: auto-test-web:2.0    ports:      - "10888:10888"    restart: unless-stopped    environment:      - NODE_ENV=production    #volumes:    #  - ./dist:/usr/share/nginx/html    # 添加资源限制    deploy:      resources:        limits:          cpus: "1.0"          memory: 512M# 添加共享网络networks:  default:    name: auto-test-network    driver: bridge
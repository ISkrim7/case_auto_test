#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2024/6/15# @Author : cyq# @File : user# @Software: PyCharm# @Desc:from typing import Unionfrom pydantic import BaseModel, field_validator, Fieldfrom enums.UserEnum import GenderEnumfrom app.exception import ParamsErrorimport reclass RegisterUser(BaseModel):    username: str = Field(..., title='用户名', description='用户名', max_length=20)    gender: GenderEnum = Field(default=GenderEnum.MALE, title='性别', description='性别')    phone: str = Field(..., title='手机号', description='手机号', max_length=11)    tagName: str | None = Field(None, title='标签名', description='标签名')    departmentID: Union[int, None] = Field(None, title='部门ID', description='部门ID')    isAdmin: Union[bool, None] = Field(False, title='是否管理员', description='是否管理员')    @field_validator('phone')    @classmethod    def check_phone(cls, v: str):        par = "^((13[0-9])|(14)|(15[0-3,5-9])|(17[0,3,5-8])|(18[0-9])|166|198|199|(147))\\d{8}$"        res = re.match(par, v.strip())        if not res:            raise ParamsError('手机号格式错误')        return vclass UserOptSchema(BaseModel):    userId: intclass RegisterAdmin(BaseModel):    username: strclass UpdateUserSchema(BaseModel):    id: int    username: strclass PasswordUserSchema(BaseModel):    new_password: str    old_password: strclass LoginUser(BaseModel):    username: str    password: str
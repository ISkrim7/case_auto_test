#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2025/8/4# @Author : cyq# @File : __init__.py# @Software: PyCharm# @Desc:from typing import Listfrom pydantic import BaseModelfrom app.schema import PageSchemafrom enums import ModuleEnumclass CaseStepInfoSchema(BaseModel):    id: int | None = None    step: int    todo: str    exp: strclass CaseHubFields(BaseModel):    case_title: str | None = None    case_level: str | None = None    case_desc: str | None = None    case_mark: str | None = None    case_setup: str | None = None    case_type: int | None = None    module_id: int | None = None    project_id: int | None = None    case_creator: int | None = None    case_info: List[CaseStepInfoSchema] | None = Noneclass InsertCaseSchema(CaseHubFields):    case_title: str    case_level: str    case_setup: str    case_type: int    module_id: int    project_id: int    case_info: List[CaseStepInfoSchema]class UpdateCaseSchema(CaseHubFields):    id: intclass PageCaseSchema(CaseHubFields, PageSchema):    module_type: int = ModuleEnum.CASEclass GetCaseSchema(BaseModel):    caseId: int__all__ = [    "InsertCaseSchema",    "UpdateCaseSchema",    "PageCaseSchema",    "GetCaseSchema"]
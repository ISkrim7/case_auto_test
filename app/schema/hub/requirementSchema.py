#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2025/8/25# @Author : cyq# @File : requirementSchema# @Software: PyCharm# @Desc:from typing import Listfrom pydantic import BaseModel, Fieldfrom app.schema import PageSchemafrom enums import ModuleEnumclass RequirementsField(BaseModel):    id: int | None = Field(None, alias="id")    uid: str | None = Field(None, alias="uid")    requirement_url: str | None = Field(None, alias="requirement_url")    requirement_name: str | None = Field(None, alias="requirement_name")    requirement_level: str | None = Field(None, alias="requirement_level")    process: int | None = Field(None, alias="process")    develops: List[int] | None = Field(None, alias="develops")    maintainer: int | None = Field(None)    case_number: int | None = Field(0)    module_id: int | None = Field(None)    project_id: int | None = Field(None)    # module_type: int = Field(ModuleEnum.CASE, title="模块类型")class AddRequirementsSchema(RequirementsField):    requirement_name: str    requirement_level: str    process: int = Field(5, alias="process")    develops: List[int] | None = Field(None, alias="develops")    maintainer: int | None = Field(None)    case_number: int | None = Field(0)    module_id: int    project_id: intclass UpdateRequirementsSchema(RequirementsField):    case_number: int | None = Noneclass RemoveRequirementsSchema(BaseModel):    requirementId: intclass GetRequirementsSchema(BaseModel):    requirementId: intclass PageRequirementsSchema(RequirementsField, PageSchema):    module_type: int = ModuleEnum.CASE
#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2025/7/23# @Author : cyq# @File : playTaskSchema# @Software: PyCharm# @Desc:from typing import Listfrom pydantic import BaseModel, Fieldfrom app.schema import PageSchemafrom enums import ModuleEnumclass PlayTaskField(BaseModel):    title: str | None = Field(None)    description: str | None = Field(None)    is_auto: bool = Field(None)    cron: str | None = Field(None)    switch: bool = Field(None)    status: str | None = Field(None)    level: str | None = Field(None)    play_case_num: int | None = Field(None)    retry: int | None = Field(None)    module_id: int | None = Field(None)    project_id: int | None = Field(None)    push_id: int | None = Field(None)class PagePlayTaskSchema(PlayTaskField, PageSchema):    module_type: int = ModuleEnum.UI_TASKclass InsertPlayTaskSchema(PlayTaskField):    module_id: int    project_id: int    description: str    is_auto: bool = False    switch: bool = False    status: str | None = Field("WAIT")    title: strclass UpdatePlayTaskSchema(PlayTaskField):    id: intclass GetPlayTaskByIDSchema(BaseModel):    taskId: intclass PlayAssociationCase(BaseModel):    taskId: int    caseIdList: List[int]class PlayRemoveAssociationCase(BaseModel):    taskId: int    caseId: intclass PlayTaskReportField(BaseModel):    run_day: str | List = None    uid: str = None    id: int = None    status: str = None    result: str = None    start_by: int = None    starter_name: str = None    project_id: int = None    module_id: int = Noneclass PlayPageTaskReportSchema(PageSchema, PlayTaskReportField):    task_name: str = None    task_id: int = Noneclass PlaySwitchPlayTaskSchema(BaseModel):    taskId: str    switch: bool__all__ = [    "PagePlayTaskSchema",    "InsertPlayTaskSchema",    "UpdatePlayTaskSchema",    "GetPlayTaskByIDSchema",    "PlayAssociationCase",    "PlayRemoveAssociationCase",    "PlayPageTaskReportSchema",    "PlaySwitchPlayTaskSchema"]
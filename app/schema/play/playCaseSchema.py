#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2025/7/3# @Author : cyq# @File : playCaseSchema# @Software: PyCharm# @Desc:from typing import List, Anyfrom pydantic import BaseModel, Field, field_validatorfrom app.schema import PageSchemafrom enums import ModuleEnumclass GetPlayCaseByCaseId(BaseModel):    caseId: int | strclass PlayCaseBasicSchema(BaseModel):    title: str    description: str    level: str = Field(..., title="用例等级")    status: str = Field(..., title="用例状态")    step_num: int = Field(0)    module_id: int    project_id: intclass EditPlayCaseBasicSchema(BaseModel):    id: int    title: str | None = Field(None)    description: str | None = Field(None)    level: str | None = Field(None, title="用例等级")    status: str | None = Field(None, title="用例状态")    module_id: int | None = Field(None)    project_id: int | None = Field(None)class ReOrderPlayStepSchema(BaseModel):    stepIds: List[int]    caseId: intclass PagePlayCaseSchema(PageSchema):    id: int | None = Field(None)    uid: str | None = Field(None)    title: str | None = Field(None)    description: str | None = Field(None)    level: str | None = Field(None, title="用例等级")    status: str | None = Field(None, title="用例状态")    step_num: int | None = Field(None)    module_id: int | None = Field(None)    project_id: int | None = Field(None)    module_type: int = Field(ModuleEnum.UI_CASE, title="模块类型")class PlayCaseChoiceStepSchema(BaseModel):    caseId: int    choice_steps: List[int]    quote: bool = Field(True, title="是否引用")class PlayCaseChoiceGroupStepSchema(BaseModel):    caseId: int    choice_steps: List[int]class PagePlayCaseResultSchema(PageSchema):    ui_case_Id: int | None = None    ui_case_name: str | None = None    starter_id: int | None = None    starter_name: str | None = None    result: str | None = None    status: str | None = Noneclass PagePlayCaseVariableSchema(PageSchema):    key: str | None = Field(None)    value: Any | None = Field(None)    play_case_id: intclass GetPlayCaseVariableSchema(BaseModel):    uid: strclass InsertPlayCaseVariableSchema(BaseModel):    key: str    value: Any    play_case_id: intclass EditPlayCaseVariableSchema(BaseModel):    id: int    play_case_id: int    key: str | None = Field(None)    value: Any | None = Field(None)
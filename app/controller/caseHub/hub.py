#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2025/8/4# @Author : cyq# @File : hub# @Software: PyCharm# @Desc:from fastapi import APIRouter, Dependsfrom app.controller import Authenticationfrom app.response import Responsefrom app.schema.hub import *from app.mapper.caseHub import CaseHubMapperrouter = APIRouter(prefix="/hub", tags=['用例'])@router.post("/insertCase", description="新增用例")async def insert_case(info: InsertCaseSchema, cu=Depends(Authentication())):    case = await CaseHubMapper.save(        creatorUser=cu,        **info.model_dump()    )    return Response.success(case)@router.post("/updateCase", description="修改用例")async def update_case(info: UpdateCaseSchema, cu=Depends(Authentication())):    case = await CaseHubMapper.update_by_id(        updateUser=cu,        **info.model_dump(exclude_none=True)    )    return Response.success(case)@router.post("/removeCase", description="修改用例")async def remove_case(info: GetCaseSchema, cu=Depends(Authentication())):    await CaseHubMapper.delete_by_id(        ident=info.caseId,    )    return Response.success()@router.get("/getCaseById", description="修改用例")async def getCaseById(info: GetCaseSchema, cu=Depends(Authentication())):    case = await CaseHubMapper.get_by_id(        ident=info.caseId,    )    return Response.success(case)@router.post("/pageCase", description="修改用例")async def page_case(info: PageCaseSchema, cu=Depends(Authentication())):    case = await CaseHubMapper.page_by_module(        **info.model_dump(            exclude_none=True,            exclude_unset=True        )    )    return Response.success(case)
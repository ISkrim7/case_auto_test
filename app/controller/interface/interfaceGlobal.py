#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2025/2/18# @Author : cyq# @File : interfaceGlobal# @Software: PyCharm# @Desc:from fastapi import APIRouterfrom fastapi.params import Dependsfrom app.controller import Authenticationfrom app.mapper.interface import  InterfaceGlobalHeaderMapperfrom app.mapper.interface.interfaceGlobalMapper import InterfaceGlobalFuncMapperfrom app.model.base import Userfrom app.response import Responsefrom app.schema.interface import AddGlobalSchema, UpdateGlobalSchema, PageGlobalSchema, SetGlobalSchemafrom utils import MyLoguruLOG = MyLoguru().get_logger()router = APIRouter(prefix="/interface/global", tags=['全局配置'])@router.post("/insert_header", description="添加全局Header")async def insert_headers(info: AddGlobalSchema, cr: User = Depends(Authentication())):    h = await InterfaceGlobalHeaderMapper.save(        creatorUser=cr,        **info.model_dump()    )    return Response.success(h)@router.post("/update_header", description="更新全局headers")async def update_header(info: UpdateGlobalSchema, ur: User = Depends(Authentication())):    await InterfaceGlobalHeaderMapper.update_by_uid(        updateUser=ur,        **info.model_dump()    )    return Response.success()@router.post("/page_header", description="分页 headers")async def page_header(info: PageGlobalSchema, _: User = Depends(Authentication())):    data = await InterfaceGlobalHeaderMapper.page_query(**info.model_dump(exclude_unset=True, exclude_none=True))    return Response.success(data)@router.post("/remove_header", description="删除 headers")async def remove_headers(info: SetGlobalSchema, _: User = Depends(Authentication())):    await InterfaceGlobalHeaderMapper.delete_by_uid(info.uid)    return Response.success()@router.get("/query_func", description="Api可用函数")async def get_interface_script_funcs():    funcs = await InterfaceGlobalFuncMapper.query_all()    return Response.success(funcs)
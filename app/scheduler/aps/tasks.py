#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2025/4/3# @Author : cyq# @File : tasks# @Software: PyCharm# @Desc:from enums import StarterEnumfrom interface.starter import APIStarterfrom interface.taskRunner import TaskRunnerfrom play.playTaskRunner import PlayTaskRunnerfrom play.starter import UIStarterfrom utils import logasync def ui_task(task_id: int):    await PlayTaskRunner(UIStarter(StarterEnum.RoBot)).execute_task(task_id)async def api_task(task_id: int):    await TaskRunner(APIStarter(StarterEnum.RoBot)).runTask(task_id)async def run_heartbeat():    """可序列化的心跳任务函数"""    from common import rc    from app.scheduler.aps.base import BaseScheduler    Key = "scheduler:master_lock"    if not hasattr(rc, 'r') or not rc.r:        await rc.init_pool()    if await rc.r.get(Key):        await rc.r.expire(Key, 60)    else:        #log.error("⚠️ Scheduler lock expired, attempting to reacquire...")        scheduler = BaseScheduler(rc)        if await scheduler.try_become_master():            log.debug("✅ Successfully reacquired scheduler lock")        else:            log.error("❌ Failed to reacquire scheduler lock")
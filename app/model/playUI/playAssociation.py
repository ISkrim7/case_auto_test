#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2025/7/2# @Author : cyq# @File : playAssociation# @Software: PyCharm# @Desc:from sqlalchemy import Column, INTEGER, ForeignKeyfrom sqlalchemy.orm import relationshipfrom app.model.basic import base__all__ = ["PlayCaseStepAssociation", "PlayTaskCasesAssociation"]class PlayCaseStepAssociation(base):    """    case steps 关联表    """    __tablename__ = "play_case_steps_association"    play_case_id = Column(INTEGER, ForeignKey('play_case.id', ondelete="CASCADE"), primary_key=True)    play_step_id = Column(INTEGER, ForeignKey('play_step.id', ondelete="CASCADE"), primary_key=True)    step_order = Column(INTEGER)    # 定义与 PlayCase 的关系    play_case = relationship("PlayCase", back_populates="step_associations")    # 定义与 PlayStep 的关系    play_step = relationship("PlayStep", back_populates="case_associations")    def __repr__(self):        return (f"<PlayCaseStepAssociation(play_case_id={self.play_case_id}, play_step_id={self.play_step_id}, "                f"step_order={self.step_order})>")class PlayTaskCasesAssociation(base):    """    task_cases 关联表    """    __tablename__ = "play_task_cases_association"    play_case_id = Column(INTEGER, ForeignKey('play_case.id'), primary_key=True)    play_task_id = Column(INTEGER, ForeignKey('play_task.id', ondelete="CASCADE"), primary_key=True)    case_order = Column(INTEGER)    def __repr__(self):        return (f"<PlayTaskCasesAssociation(play_case_id={self.play_case_id},play_task_id={self.play_task_id}"                f"step_order={self.case_order})>")
#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2025/7/2# @Author : cyq# @File : playTask# @Software: PyCharm# @Desc:from app.model import BaseModelfrom sqlalchemy import Column, String, BOOLEAN, INTEGER, ForeignKey, DATETIME, DATE, TEXT, JSONfrom datetime import datetime, datefrom play.starter import UIStarterclass PlayTask(BaseModel):    """    Play Task    """    __tablename__ = "play_task"    title = Column(String(20), unique=True, nullable=False, comment="任务标题")    description = Column(String(100), nullable=False, comment="任务描述")    is_auto = Column(BOOLEAN, default=False, comment="是否是自动任务")    cron = Column(String(100), nullable=True, comment="corn")    switch = Column(BOOLEAN, default=False, comment="开关")    status = Column(String(20), nullable=True, default="WAIT", comment="任务状体")    level = Column(String(20), nullable=False, comment="任务等级")    play_case_num = Column(INTEGER, nullable=False, default=0, comment="用例个数")    retry = Column(INTEGER, nullable=False, default=1, comment="重试次数")    module_id = Column(INTEGER, nullable=False, comment="所属模块")    project_id = Column(INTEGER, ForeignKey("project.id", ondelete='set null'),                        nullable=True,                        comment="所属项目")    push_id = Column(INTEGER, nullable=True, comment="推送方式1企业微信2邮箱")    @property    def desc(self):        if len(self.description) > 10:            return self.description[:10] + "..."        return self.description    def __repr__(self):        return f"<PlayTask(title='{self.title}', desc='{self.desc}')>"class PlayTaskResult(BaseModel):    """    Play Task Result    """    __tablename__ = "play_task_result"    status = Column(String(10), default="RUNNING", comment="状态 RUNNING DONE")    result = Column(String(10), nullable=True, comment="运行结果  SUCCESS FAIL")    total_number = Column(INTEGER, comment="总运行数量")    success_number = Column(INTEGER, default=0, comment="成功数量")    fail_number = Column(INTEGER, default=0, comment="失败数量")    rate_number = Column(INTEGER, default=0, comment="通过率")    starter_name = Column(String(20), nullable=True, comment="运行人名称")    total_usetime = Column(String(20), comment="运行时间")    start_time = Column(DATETIME, default=datetime.now, nullable=True, comment="开始时间")    end_time = Column(DATETIME, nullable=True, comment="结束时间")    task_id = Column(INTEGER, ForeignKey("play_task.id", ondelete="CASCADE"), nullable=True)    task_uid = Column(String(10), nullable=False, comment="task索引")    task_name = Column(String(20), nullable=True, comment="任务名称")    run_day = Column(DATE, default=date.today(), comment="运行日期")    project_id = Column(INTEGER, ForeignKey("project.id", ondelete='set null'), nullable=True,                        comment="所属项目")    module_id = Column(INTEGER, nullable=True, comment="所属模块")    def __repr__(self):        return (            f"<PlayTaskResult(taskId='{self.task_id}', taskName='{self.task_name}', "            f"runDay='{self.run_day}',status='{self.status}'),result='{self.result})>'")
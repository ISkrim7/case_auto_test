#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2025/7/2# @Author : cyq# @File : PlayConfig# @Software: PyCharm# @Desc:from app.model import BaseModelfrom sqlalchemy import Column, String, BOOLEAN, INTEGER, ForeignKey, DATETIME, DATE, TEXT, JSONclass PlayMethod(BaseModel):    """    playwright method    """    __tablename__ = "play_method"    label = Column(String(255), comment="请求方法名称")    value = Column(String(255), comment="请求方法值")    description = Column(String(255), nullable=True, comment="请求方法描述")    need_locator = Column(INTEGER, nullable=False, comment="需要填写定位器 1 是 2否")    need_value = Column(INTEGER, nullable=False, comment="需要值 1 是 2否")    def __repr__(self):        return (            f"<PlayMethod (label='{self.label}',"            f" value='{self.value}',"            f" description='{self.description}',"            f" need_locator='{self.need_locator}',"            f" need_value='{self.need_value}')>"        )class PlayGlobalVariable(BaseModel):    """    Play Global Variable    """    __tablename__ = 'play_global_variable'    key = Column(String(40), nullable=False, unique=True, comment="key")    value = Column(TEXT, nullable=False, comment="value")    description = Column(String(100), nullable=True, comment="描述")    project_id = Column(INTEGER, ForeignKey('project.id', ondelete="cascade"),                        nullable=False, comment="所属项目")    @property    def map(self) -> dict:        return {self.key: self.value}    def __repr__(self):        return (            f"<PlayGlobalVariable(key='{self.key}', value='{self.value}' project={self.project_id})>"        )
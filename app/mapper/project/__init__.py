#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2024/6/20# @Author : cyq# @File : __init__.py# @Software: PyCharm# @Desc:from sqlalchemy import selectfrom app.mapper import Mapperfrom app.mapper.user import UserMapperfrom app.model import async_sessionfrom app.model.base import Project, User, GlobalVariableclass ProjectMapper(Mapper):    __model__ = Project    @classmethod    async def insert_project(cls, title: str, desc: str, chargeId: int, creatorUser: User):        """        插入项目        :param title:        :param desc:        :param chargeId:        :param creatorUser:        :return:        """        try:            async with async_session() as session:                charger = await UserMapper.get_by_id(ident=chargeId, session=session)                session.add(Project(                    title=title,                    #desc=desc,                    description=desc,                    creator=creatorUser.id,                    creatorName = creatorUser.username,                    chargeId=chargeId,                    chargeName = charger.username,                ))                await session.commit()        except Exception as e:            raise eclass GlobalVariableMapper(Mapper):    __model__ = GlobalVariable    @classmethod    async def fetch_by_key(cls, key: str)-> GlobalVariable | None:        try:            async with async_session() as session:                data = await session.scalar(select(cls.__model__).where(                    cls.__model__.key == key                ))                return data        except Exception as e:            raise e
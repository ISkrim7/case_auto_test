#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2025/8/26# @Author : cyq# @File : requirementMapper# @Software: PyCharm# @Desc:from app.mapper import Mapperfrom app.model import async_sessionfrom app.model.caseHub.caseHUB import Requirementfrom app.mapper.user import UserMapperclass RequirementMapper(Mapper):    __model__ = Requirement    @classmethod    async def req_info(cls, **kwargs):        try:            async with async_session() as session:                req: Requirement = await cls.get_by_id(session=session, **kwargs)                reqInfo = req.map                maintainer = await UserMapper.get_by_id(ident=req.maintainer, session=session)                reqInfo['developsInfo'] = []                reqInfo['maintainerInfo'] = maintainer.userInfo                if req.develops:                    for d in req.develops:                        dev = await UserMapper.get_by_id(ident=d, session=session)                        reqInfo['developsInfo'].append(dev.userInfo)                return reqInfo        except Exception:            raise
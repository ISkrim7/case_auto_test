#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2025/7/3# @Author : cyq# @File : common# @Software: PyCharm# @Desc:from sqlalchemy import select, and_, insert, existsfrom sqlalchemy.ext.asyncio import AsyncSessionfrom app.model.playUI import PlayCaseStepAssociation, PlayTaskCasesAssociationasync def get_case_step_last_index(session: AsyncSession, caseId: int) -> int:    """    异步获取指定用例的最后一个步骤索引。    该函数查询数据库以找到给定用例ID的最大步骤顺序值，从而确定该用例的最后一个步骤索引。    参数:    - session: AsyncSession - 异步数据库会话对象，用于执行数据库查询。    - caseId: int - 用例ID，用于过滤与此用例关联的步骤。    返回:    - int - 用例的最后一个步骤索引。如果没有找到该用例的步骤，则返回0。    """    try:        result = await session.execute(select(PlayCaseStepAssociation.step_order)                                       .where(PlayCaseStepAssociation.play_case_id == caseId)                                       .order_by(PlayCaseStepAssociation.step_order.desc())                                       .limit(1))        last_step_order = result.scalar()        return last_step_order or 0    except Exception as e:        raise easync def insert_play_case_step_association(session: AsyncSession, caseId: int, stepId: int, step_order: int):    """    插入关联 case step    如果存在 返回 False，否则插入并返回 True    :param session: 异步会话对象    :param caseId: 关联的用例 ID    :param stepId: 关联的步骤 ID    :param step_order: 步骤顺序    :return: 是否成功插入    """    try:        # 检查是否存在相同的 case_id 和 step_id        # 使用 exists() 提升查询效率        stmt = select(exists().where(            PlayCaseStepAssociation.play_case_id == caseId,            PlayCaseStepAssociation.play_step_id == stepId        ))        result = await session.execute(stmt)        if result.scalar():            return False        await session.execute(insert(PlayCaseStepAssociation).values(            play_case_id=caseId,            play_step_id=stepId,            step_order=step_order        ))        return True    except Exception as e:        raise easync def get_case_last_index(session: AsyncSession, taskId: int) -> int:    """    异步获取指定用例的最后一个case索引。    """    try:        sql = (            select(PlayTaskCasesAssociation.case_order).where(                PlayTaskCasesAssociation.play_task_id == taskId            ).order_by(PlayTaskCasesAssociation.case_order.desc()).limit(1)        )        result = await session.execute(sql)        last_step_order = result.scalar()  # Fetch the first (and only) result        return last_step_order or 0    except Exception as e:        raise e
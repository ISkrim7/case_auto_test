#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2025/9/9# @Author : cyq# @File : threadPool# @Software: PyCharm# @Desc:import asynciofrom concurrent.futures import ThreadPoolExecutorfrom typing import Callable, Anyclass ThreadPoolHelper:    def __init__(self, workers: int = 5):        self.max_worker = workers        self._exe = ThreadPoolExecutor(max_workers=self.max_worker)    def submit_task(self, func: Callable[..., Any], *args, **kwargs):        """        提交任务道线程池        """        self._exe.submit(            func,            *args,            **kwargs        )    def run_in_exe(self, loop: asyncio.AbstractEventLoop, func: Callable[..., Any], *args):        """        执行异步任务 通过线程池        """        return loop.run_in_executor(            self._exe,            func,            *args,        )    def shutdown(self):        """        关闭线程池        """        self._exe.shutdown(wait=True)
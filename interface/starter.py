#!/usr/bin/env python# -*- coding:utf-8 -*-# @Time : 2024/12/6# @Author : cyq# @File : io_sender# @Software: PyCharm# @Desc:from app.model.base import Userfrom enums import StarterEnumfrom utils import GenerateTools, MyLogurufrom app.ws import async_iofrom utils.io_sender import SocketSenderlog = MyLoguru().get_logger()Event = "api_message"NS = "/api_namespace"class APIStarter(SocketSender):    uid: str = None    userId: int = None    def __init__(self, user: User | StarterEnum):        self.logs = []        super().__init__(event=Event, user=user, ns=NS)    async def send(self, msg: str):        """        异步发送消息方法。        该方法负责格式化消息并将其发送给用户。它首先会尝试格式化消息，        然后记录日志，保存消息记录，并通过异步I/O发送消息。如果在过程中        出现任何异常，它会记录错误信息。        参数:        - msg (str): 需要发送的消息内容。        返回:        无返回值。        """        try:            # 格式化消息，添加时间戳。            msg = f"{GenerateTools.getTime(1)} 🚀 🚀  {msg}"            # 使用异步I/O发送消息。            return await super().send(msg)        except Exception as e:            # 记录发送过程中出现的错误。            log.error(e)